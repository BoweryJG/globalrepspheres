{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Typography,Table,TableBody,TableCell,TableHead,TableRow,Paper}from'@mui/material';import NavBar from'./components/NavBar';import StarryBackground from'./components/StarryBackground';import OrbContextProvider from'./components/OrbContextProvider';import{AuthProvider}from'./contexts/AuthContext';/**\n * AdminAnalyticsPage fetches metrics from the Google Analytics Data API and\n * displays them in a simple table. The access token and property ID should be\n * provided via environment variables REACT_APP_GA_ACCESS_TOKEN and\n * REACT_APP_GA_PROPERTY_ID.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminAnalyticsPage(){const[report,setReport]=useState(null);useEffect(()=>{const fetchReport=async()=>{const token=process.env.REACT_APP_GA_ACCESS_TOKEN;const propertyId=process.env.REACT_APP_GA_PROPERTY_ID;if(!token||!propertyId)return;try{const res=await fetch(\"https://analyticsdata.googleapis.com/v1beta/properties/\".concat(propertyId,\":runReport\"),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify({dateRanges:[{startDate:'7daysAgo',endDate:'today'}],metrics:[{name:'activeUsers'},{name:'sessions'}],dimensions:[{name:'date'}]})});if(res.ok){const data=await res.json();setReport(data);}else{console.error('Failed to fetch analytics',await res.text());}}catch(err){console.error('Error contacting Google Analytics',err);}};fetchReport();},[]);const renderTable=()=>{if(!report){return/*#__PURE__*/_jsx(Typography,{children:\"Loading analytics\\u2026\"});}const{dimensionHeaders=[],metricHeaders=[],rows=[]}=report;return/*#__PURE__*/_jsx(Paper,{sx:{mt:2,overflowX:'auto'},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[dimensionHeaders.map(h=>/*#__PURE__*/_jsx(TableCell,{children:h.name},h.name)),metricHeaders.map(h=>/*#__PURE__*/_jsx(TableCell,{children:h.name},h.name))]})}),/*#__PURE__*/_jsx(TableBody,{children:rows.map((row,i)=>/*#__PURE__*/_jsxs(TableRow,{children:[row.dimensionValues.map((d,j)=>/*#__PURE__*/_jsx(TableCell,{children:d.value},\"d-\".concat(j))),row.metricValues.map((m,j)=>/*#__PURE__*/_jsx(TableCell,{children:m.value},\"m-\".concat(j)))]},i))})]})});};return/*#__PURE__*/_jsx(OrbContextProvider,{children:/*#__PURE__*/_jsxs(AuthProvider,{children:[/*#__PURE__*/_jsx(StarryBackground,{}),/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(Box,{sx:{p:2,color:'#fff'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Analytics Dashboard\"}),renderTable()]})]})});}","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","NavBar","StarryBackground","OrbContextProvider","AuthProvider","jsx","_jsx","jsxs","_jsxs","AdminAnalyticsPage","report","setReport","fetchReport","token","process","env","REACT_APP_GA_ACCESS_TOKEN","propertyId","REACT_APP_GA_PROPERTY_ID","res","fetch","concat","method","headers","Authorization","body","JSON","stringify","dateRanges","startDate","endDate","metrics","name","dimensions","ok","data","json","console","error","text","err","renderTable","children","dimensionHeaders","metricHeaders","rows","sx","mt","overflowX","size","map","h","row","i","dimensionValues","d","j","value","metricValues","m","p","color","variant","gutterBottom"],"sources":["/Users/jasonsmacbookpro2022/Documents/RepSpheres-Platform/repspheres-homepage-main/src/AdminAnalyticsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@mui/material';\nimport NavBar from './components/NavBar';\nimport StarryBackground from './components/StarryBackground';\nimport OrbContextProvider from './components/OrbContextProvider';\nimport { AuthProvider } from './contexts/AuthContext';\n\n/**\n * AdminAnalyticsPage fetches metrics from the Google Analytics Data API and\n * displays them in a simple table. The access token and property ID should be\n * provided via environment variables REACT_APP_GA_ACCESS_TOKEN and\n * REACT_APP_GA_PROPERTY_ID.\n */\nexport default function AdminAnalyticsPage() {\n  const [report, setReport] = useState(null);\n\n  useEffect(() => {\n    const fetchReport = async () => {\n      const token = process.env.REACT_APP_GA_ACCESS_TOKEN;\n      const propertyId = process.env.REACT_APP_GA_PROPERTY_ID;\n      if (!token || !propertyId) return;\n\n      try {\n        const res = await fetch(\n          `https://analyticsdata.googleapis.com/v1beta/properties/${propertyId}:runReport`,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              dateRanges: [{ startDate: '7daysAgo', endDate: 'today' }],\n              metrics: [{ name: 'activeUsers' }, { name: 'sessions' }],\n              dimensions: [{ name: 'date' }],\n            }),\n          }\n        );\n\n        if (res.ok) {\n          const data = await res.json();\n          setReport(data);\n        } else {\n          console.error('Failed to fetch analytics', await res.text());\n        }\n      } catch (err) {\n        console.error('Error contacting Google Analytics', err);\n      }\n    };\n\n    fetchReport();\n  }, []);\n\n  const renderTable = () => {\n    if (!report) {\n      return <Typography>Loading analyticsâ€¦</Typography>;\n    }\n\n    const { dimensionHeaders = [], metricHeaders = [], rows = [] } = report;\n\n    return (\n      <Paper sx={{ mt: 2, overflowX: 'auto' }}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              {dimensionHeaders.map((h) => (\n                <TableCell key={h.name}>{h.name}</TableCell>\n              ))}\n              {metricHeaders.map((h) => (\n                <TableCell key={h.name}>{h.name}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, i) => (\n              <TableRow key={i}>\n                {row.dimensionValues.map((d, j) => (\n                  <TableCell key={`d-${j}`}>{d.value}</TableCell>\n                ))}\n                {row.metricValues.map((m, j) => (\n                  <TableCell key={`m-${j}`}>{m.value}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  };\n\n  return (\n    <OrbContextProvider>\n      <AuthProvider>\n        <StarryBackground />\n        <NavBar />\n        <Box sx={{ p: 2, color: '#fff' }}>\n          <Typography variant=\"h4\" gutterBottom>\n            Analytics Dashboard\n          </Typography>\n          {renderTable()}\n        </Box>\n      </AuthProvider>\n    </OrbContextProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}