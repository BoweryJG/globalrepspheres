{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Typography,Container,Tabs,Tab,Paper}from'@mui/material';import NavBar from'./components/NavBar';import StarryBackground from'./components/StarryBackground';import OrbContextProvider from'./components/OrbContextProvider';import Podcasts from'./components/Podcasts';import PodcastHero from'./components/PodcastHero';import LiveFeed from'./components/LiveFeed';import Footer from'./components/Footer';import ThemeToggle from'./components/ThemeToggle';import{AuthProvider}from'./contexts/AuthContext';import supabase from'./supabase';import PodcastsIcon from'@mui/icons-material/Podcasts';import LiveTvIcon from'@mui/icons-material/LiveTv';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SUPABASE_URL=process.env.REACT_APP_SUPABASE_URL;const SUPABASE_KEY=process.env.REACT_APP_SUPABASE_KEY;// Function to format podcast title from filename\nconst formatPodcastTitle=filename=>{// Remove file extension\nlet title=filename.replace(/\\.[^/.]+$/,\"\");// Replace underscores and hyphens with spaces\ntitle=title.replace(/[_-]/g,\" \");// Capitalize first letter of each word\ntitle=title.split(' ').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');return title;};// Function to generate a description based on the title\nconst generateDescription=title=>{return\"An in-depth discussion about \".concat(title,\".\");};export default function PodcastPage(){const[episodes,setEpisodes]=useState([]);const[activeTab,setActiveTab]=useState(0);const handleTabChange=(event,newValue)=>{setActiveTab(newValue);};useEffect(()=>{const fetchEpisodes=async()=>{// Local podcast files - this would ideally be fetched from the server\n// For now, we'll hardcode the Venus AI podcast and any future podcasts would be added here\nconst localEpisodes=[{id:'local-1',title:'Venus AI ~ Evolution Products & Market Position',description:'An in-depth discussion about Venus AI\\'s evolution, product strategy, and market positioning.',url:process.env.PUBLIC_URL+'/podcasts/Venus Ai ~ Evolution Products & Market Position.mp3',isLocal:true}// To add more podcasts, simply copy the MP3 file to the public/podcasts directory\n// and add a new entry here with a unique id, title, description, and url\n// Example:\n// {\n//   id: 'local-2',\n//   title: 'New Podcast Title',\n//   description: 'Description of the new podcast',\n//   url: process.env.PUBLIC_URL + '/podcasts/filename.mp3',\n//   isLocal: true\n// }\n];// Set local episodes immediately\nsetEpisodes(localEpisodes);// Try to fetch from Supabase\ntry{const{data,error}=await supabase.from('podcasts').select('*');if(error)throw error;if(data&&data.length>0){// Combine local episodes with remote episodes\nsetEpisodes([...localEpisodes,...data]);}}catch(err){console.error('Failed to fetch podcasts from Supabase client',err);// Try the alternative method with fetch API\nif(SUPABASE_URL&&SUPABASE_KEY){try{const res=await fetch(\"\".concat(SUPABASE_URL,\"/rest/v1/podcasts?select=*\"),{headers:{apikey:SUPABASE_KEY,Authorization:\"Bearer \".concat(SUPABASE_KEY)}});if(res.ok){const data=await res.json();if(data&&data.length>0){// Combine local episodes with remote episodes\nsetEpisodes([...localEpisodes,...data]);}}}catch(fetchErr){console.error('Failed to fetch podcasts with fetch API',fetchErr);// Keep the local episodes if both methods fail\n}}else{console.log('Using local podcast episodes (Supabase URL or Key is missing)');}}};fetchEpisodes();},[]);return/*#__PURE__*/_jsx(OrbContextProvider,{children:/*#__PURE__*/_jsxs(AuthProvider,{children:[/*#__PURE__*/_jsx(StarryBackground,{}),/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(PodcastHero,{}),/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{mt:4},children:/*#__PURE__*/_jsx(Paper,{elevation:0,sx:{bgcolor:'rgba(40, 20, 70, 0.7)',borderRadius:3,border:'1px solid rgba(255, 255, 255, 0.1)',overflow:'hidden'},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,variant:\"fullWidth\",sx:{borderBottom:'1px solid rgba(255, 255, 255, 0.1)','& .MuiTab-root':{color:'rgba(255, 255, 255, 0.7)',fontWeight:600,fontSize:'1.1rem',py:2,transition:'all 0.3s ease','&:hover':{color:'var(--secondary, #00ffc6)',bgcolor:'rgba(0, 255, 198, 0.05)'}},'& .Mui-selected':{color:'var(--secondary, #00ffc6) !important',position:'relative','&::after':{content:'\"\"',position:'absolute',bottom:0,left:0,right:0,height:3,bgcolor:'var(--secondary, #00ffc6)',borderRadius:'3px 3px 0 0'}},'& .MuiTabs-indicator':{display:'none'}},children:[/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(PodcastsIcon,{sx:{mb:0.5}}),label:\"Episodes\",iconPosition:\"start\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(LiveTvIcon,{sx:{mb:0.5}}),label:\"Live & Trending\",iconPosition:\"start\"})]})})}),/*#__PURE__*/_jsxs(Box,{id:\"episodes\",sx:{minHeight:'60vh'},children:[activeTab===0&&/*#__PURE__*/_jsx(Podcasts,{episodes:episodes}),activeTab===1&&/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",children:/*#__PURE__*/_jsx(LiveFeed,{})})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(ThemeToggle,{})]})});}","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Container","Tabs","Tab","Paper","NavBar","StarryBackground","OrbContextProvider","Podcasts","PodcastHero","LiveFeed","Footer","ThemeToggle","AuthProvider","supabase","PodcastsIcon","LiveTvIcon","jsx","_jsx","jsxs","_jsxs","SUPABASE_URL","process","env","REACT_APP_SUPABASE_URL","SUPABASE_KEY","REACT_APP_SUPABASE_KEY","formatPodcastTitle","filename","title","replace","split","map","word","charAt","toUpperCase","slice","join","generateDescription","concat","PodcastPage","episodes","setEpisodes","activeTab","setActiveTab","handleTabChange","event","newValue","fetchEpisodes","localEpisodes","id","description","url","PUBLIC_URL","isLocal","data","error","from","select","length","err","console","res","fetch","headers","apikey","Authorization","ok","json","fetchErr","log","children","maxWidth","sx","mt","elevation","bgcolor","borderRadius","border","overflow","value","onChange","variant","borderBottom","color","fontWeight","fontSize","py","transition","position","content","bottom","left","right","height","display","icon","mb","label","iconPosition","minHeight"],"sources":["/Users/jasonsmacbookpro2022/Documents/RepSpheres-Platform/repspheres-homepage-main/src/PodcastPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Container, Tabs, Tab, Paper } from '@mui/material';\nimport NavBar from './components/NavBar';\nimport StarryBackground from './components/StarryBackground';\nimport OrbContextProvider from './components/OrbContextProvider';\nimport Podcasts from './components/Podcasts';\nimport PodcastHero from './components/PodcastHero';\nimport LiveFeed from './components/LiveFeed';\nimport Footer from './components/Footer';\nimport ThemeToggle from './components/ThemeToggle';\nimport { AuthProvider } from './contexts/AuthContext';\nimport supabase from './supabase';\nimport PodcastsIcon from '@mui/icons-material/Podcasts';\nimport LiveTvIcon from '@mui/icons-material/LiveTv';\n\nconst SUPABASE_URL = process.env.REACT_APP_SUPABASE_URL;\nconst SUPABASE_KEY = process.env.REACT_APP_SUPABASE_KEY;\n\n// Function to format podcast title from filename\nconst formatPodcastTitle = (filename) => {\n  // Remove file extension\n  let title = filename.replace(/\\.[^/.]+$/, \"\");\n  // Replace underscores and hyphens with spaces\n  title = title.replace(/[_-]/g, \" \");\n  // Capitalize first letter of each word\n  title = title.split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n  \n  return title;\n};\n\n// Function to generate a description based on the title\nconst generateDescription = (title) => {\n  return `An in-depth discussion about ${title}.`;\n};\n\nexport default function PodcastPage() {\n  const [episodes, setEpisodes] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  useEffect(() => {\n    const fetchEpisodes = async () => {\n      // Local podcast files - this would ideally be fetched from the server\n      // For now, we'll hardcode the Venus AI podcast and any future podcasts would be added here\n      const localEpisodes = [\n        {\n          id: 'local-1',\n          title: 'Venus AI ~ Evolution Products & Market Position',\n          description: 'An in-depth discussion about Venus AI\\'s evolution, product strategy, and market positioning.',\n          url: process.env.PUBLIC_URL + '/podcasts/Venus Ai ~ Evolution Products & Market Position.mp3',\n          isLocal: true\n        }\n        // To add more podcasts, simply copy the MP3 file to the public/podcasts directory\n        // and add a new entry here with a unique id, title, description, and url\n        // Example:\n        // {\n        //   id: 'local-2',\n        //   title: 'New Podcast Title',\n        //   description: 'Description of the new podcast',\n        //   url: process.env.PUBLIC_URL + '/podcasts/filename.mp3',\n        //   isLocal: true\n        // }\n      ];\n      \n      // Set local episodes immediately\n      setEpisodes(localEpisodes);\n      \n      // Try to fetch from Supabase\n      try {\n        const { data, error } = await supabase.from('podcasts').select('*');\n        if (error) throw error;\n        if (data && data.length > 0) {\n          // Combine local episodes with remote episodes\n          setEpisodes([...localEpisodes, ...data]);\n        }\n      } catch (err) {\n        console.error('Failed to fetch podcasts from Supabase client', err);\n        \n        // Try the alternative method with fetch API\n        if (SUPABASE_URL && SUPABASE_KEY) {\n          try {\n            const res = await fetch(`${SUPABASE_URL}/rest/v1/podcasts?select=*`, {\n              headers: {\n                apikey: SUPABASE_KEY,\n                Authorization: `Bearer ${SUPABASE_KEY}`,\n              },\n            });\n            if (res.ok) {\n              const data = await res.json();\n              if (data && data.length > 0) {\n                // Combine local episodes with remote episodes\n                setEpisodes([...localEpisodes, ...data]);\n              }\n            }\n          } catch (fetchErr) {\n            console.error('Failed to fetch podcasts with fetch API', fetchErr);\n            // Keep the local episodes if both methods fail\n          }\n        } else {\n          console.log('Using local podcast episodes (Supabase URL or Key is missing)');\n        }\n      }\n    };\n\n    fetchEpisodes();\n  }, []);\n\n  return (\n    <OrbContextProvider>\n      <AuthProvider>\n        <StarryBackground />\n        <NavBar />\n        <PodcastHero />\n        \n        {/* Tabs Section */}\n        <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\n          <Paper \n            elevation={0}\n            sx={{ \n              bgcolor: 'rgba(40, 20, 70, 0.7)',\n              borderRadius: 3,\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n              overflow: 'hidden'\n            }}\n          >\n            <Tabs \n              value={activeTab} \n              onChange={handleTabChange}\n              variant=\"fullWidth\"\n              sx={{\n                borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                '& .MuiTab-root': {\n                  color: 'rgba(255, 255, 255, 0.7)',\n                  fontWeight: 600,\n                  fontSize: '1.1rem',\n                  py: 2,\n                  transition: 'all 0.3s ease',\n                  '&:hover': {\n                    color: 'var(--secondary, #00ffc6)',\n                    bgcolor: 'rgba(0, 255, 198, 0.05)'\n                  }\n                },\n                '& .Mui-selected': {\n                  color: 'var(--secondary, #00ffc6) !important',\n                  position: 'relative',\n                  '&::after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    height: 3,\n                    bgcolor: 'var(--secondary, #00ffc6)',\n                    borderRadius: '3px 3px 0 0'\n                  }\n                },\n                '& .MuiTabs-indicator': {\n                  display: 'none'\n                }\n              }}\n            >\n              <Tab \n                icon={<PodcastsIcon sx={{ mb: 0.5 }} />} \n                label=\"Episodes\" \n                iconPosition=\"start\"\n              />\n              <Tab \n                icon={<LiveTvIcon sx={{ mb: 0.5 }} />} \n                label=\"Live & Trending\" \n                iconPosition=\"start\"\n              />\n            </Tabs>\n          </Paper>\n        </Container>\n        \n        {/* Content based on active tab */}\n        <Box id=\"episodes\" sx={{ minHeight: '60vh' }}>\n          {activeTab === 0 && <Podcasts episodes={episodes} />}\n          {activeTab === 1 && (\n            <Container maxWidth=\"lg\">\n              <LiveFeed />\n            </Container>\n          )}\n        </Box>\n        \n        <Footer />\n        <ThemeToggle />\n      </AuthProvider>\n    </OrbContextProvider>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,CAAEC,UAAU,CAAEC,SAAS,CAAEC,IAAI,CAAEC,GAAG,CAAEC,KAAK,KAAQ,eAAe,CAC5E,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,kBAAkB,KAAM,iCAAiC,CAChE,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,OAASC,YAAY,KAAQ,wBAAwB,CACrD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,UAAU,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACvD,KAAM,CAAAC,YAAY,CAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB,CAEvD;AACA,KAAM,CAAAC,kBAAkB,CAAIC,QAAQ,EAAK,CACvC;AACA,GAAI,CAAAC,KAAK,CAAGD,QAAQ,CAACE,OAAO,CAAC,WAAW,CAAE,EAAE,CAAC,CAC7C;AACAD,KAAK,CAAGA,KAAK,CAACC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAC,CACnC;AACAD,KAAK,CAAGA,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CACrBC,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,GAAG,CAAC,CAEZ,MAAO,CAAAR,KAAK,CACd,CAAC,CAED;AACA,KAAM,CAAAS,mBAAmB,CAAIT,KAAK,EAAK,CACrC,sCAAAU,MAAA,CAAuCV,KAAK,MAC9C,CAAC,CAED,cAAe,SAAS,CAAAW,WAAWA,CAAA,CAAG,CACpC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC6C,SAAS,CAAEC,YAAY,CAAC,CAAG9C,QAAQ,CAAC,CAAC,CAAC,CAE7C,KAAM,CAAA+C,eAAe,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CAC3CH,YAAY,CAACG,QAAQ,CAAC,CACxB,CAAC,CAEDlD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmD,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC;AACA;AACA,KAAM,CAAAC,aAAa,CAAG,CACpB,CACEC,EAAE,CAAE,SAAS,CACbrB,KAAK,CAAE,iDAAiD,CACxDsB,WAAW,CAAE,+FAA+F,CAC5GC,GAAG,CAAE9B,OAAO,CAACC,GAAG,CAAC8B,UAAU,CAAG,+DAA+D,CAC7FC,OAAO,CAAE,IACX,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACD,CAED;AACAZ,WAAW,CAACO,aAAa,CAAC,CAE1B;AACA,GAAI,CACF,KAAM,CAAEM,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAA1C,QAAQ,CAAC2C,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CACnE,GAAIF,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,GAAID,IAAI,EAAIA,IAAI,CAACI,MAAM,CAAG,CAAC,CAAE,CAC3B;AACAjB,WAAW,CAAC,CAAC,GAAGO,aAAa,CAAE,GAAGM,IAAI,CAAC,CAAC,CAC1C,CACF,CAAE,MAAOK,GAAG,CAAE,CACZC,OAAO,CAACL,KAAK,CAAC,+CAA+C,CAAEI,GAAG,CAAC,CAEnE;AACA,GAAIvC,YAAY,EAAII,YAAY,CAAE,CAChC,GAAI,CACF,KAAM,CAAAqC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAxB,MAAA,CAAIlB,YAAY,+BAA8B,CACnE2C,OAAO,CAAE,CACPC,MAAM,CAAExC,YAAY,CACpByC,aAAa,WAAA3B,MAAA,CAAYd,YAAY,CACvC,CACF,CAAC,CAAC,CACF,GAAIqC,GAAG,CAACK,EAAE,CAAE,CACV,KAAM,CAAAZ,IAAI,CAAG,KAAM,CAAAO,GAAG,CAACM,IAAI,CAAC,CAAC,CAC7B,GAAIb,IAAI,EAAIA,IAAI,CAACI,MAAM,CAAG,CAAC,CAAE,CAC3B;AACAjB,WAAW,CAAC,CAAC,GAAGO,aAAa,CAAE,GAAGM,IAAI,CAAC,CAAC,CAC1C,CACF,CACF,CAAE,MAAOc,QAAQ,CAAE,CACjBR,OAAO,CAACL,KAAK,CAAC,yCAAyC,CAAEa,QAAQ,CAAC,CAClE;AACF,CACF,CAAC,IAAM,CACLR,OAAO,CAACS,GAAG,CAAC,+DAA+D,CAAC,CAC9E,CACF,CACF,CAAC,CAEDtB,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE9B,IAAA,CAACX,kBAAkB,EAAAgE,QAAA,cACjBnD,KAAA,CAACP,YAAY,EAAA0D,QAAA,eACXrD,IAAA,CAACZ,gBAAgB,GAAE,CAAC,cACpBY,IAAA,CAACb,MAAM,GAAE,CAAC,cACVa,IAAA,CAACT,WAAW,GAAE,CAAC,cAGfS,IAAA,CAACjB,SAAS,EAACuE,QAAQ,CAAC,IAAI,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,cACrCrD,IAAA,CAACd,KAAK,EACJuE,SAAS,CAAE,CAAE,CACbF,EAAE,CAAE,CACFG,OAAO,CAAE,uBAAuB,CAChCC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,oCAAoC,CAC5CC,QAAQ,CAAE,QACZ,CAAE,CAAAR,QAAA,cAEFnD,KAAA,CAAClB,IAAI,EACH8E,KAAK,CAAErC,SAAU,CACjBsC,QAAQ,CAAEpC,eAAgB,CAC1BqC,OAAO,CAAC,WAAW,CACnBT,EAAE,CAAE,CACFU,YAAY,CAAE,oCAAoC,CAClD,gBAAgB,CAAE,CAChBC,KAAK,CAAE,0BAA0B,CACjCC,UAAU,CAAE,GAAG,CACfC,QAAQ,CAAE,QAAQ,CAClBC,EAAE,CAAE,CAAC,CACLC,UAAU,CAAE,eAAe,CAC3B,SAAS,CAAE,CACTJ,KAAK,CAAE,2BAA2B,CAClCR,OAAO,CAAE,yBACX,CACF,CAAC,CACD,iBAAiB,CAAE,CACjBQ,KAAK,CAAE,sCAAsC,CAC7CK,QAAQ,CAAE,UAAU,CACpB,UAAU,CAAE,CACVC,OAAO,CAAE,IAAI,CACbD,QAAQ,CAAE,UAAU,CACpBE,MAAM,CAAE,CAAC,CACTC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTlB,OAAO,CAAE,2BAA2B,CACpCC,YAAY,CAAE,aAChB,CACF,CAAC,CACD,sBAAsB,CAAE,CACtBkB,OAAO,CAAE,MACX,CACF,CAAE,CAAAxB,QAAA,eAEFrD,IAAA,CAACf,GAAG,EACF6F,IAAI,cAAE9E,IAAA,CAACH,YAAY,EAAC0D,EAAE,CAAE,CAAEwB,EAAE,CAAE,GAAI,CAAE,CAAE,CAAE,CACxCC,KAAK,CAAC,UAAU,CAChBC,YAAY,CAAC,OAAO,CACrB,CAAC,cACFjF,IAAA,CAACf,GAAG,EACF6F,IAAI,cAAE9E,IAAA,CAACF,UAAU,EAACyD,EAAE,CAAE,CAAEwB,EAAE,CAAE,GAAI,CAAE,CAAE,CAAE,CACtCC,KAAK,CAAC,iBAAiB,CACvBC,YAAY,CAAC,OAAO,CACrB,CAAC,EACE,CAAC,CACF,CAAC,CACC,CAAC,cAGZ/E,KAAA,CAACrB,GAAG,EAACmD,EAAE,CAAC,UAAU,CAACuB,EAAE,CAAE,CAAE2B,SAAS,CAAE,MAAO,CAAE,CAAA7B,QAAA,EAC1C5B,SAAS,GAAK,CAAC,eAAIzB,IAAA,CAACV,QAAQ,EAACiC,QAAQ,CAAEA,QAAS,CAAE,CAAC,CACnDE,SAAS,GAAK,CAAC,eACdzB,IAAA,CAACjB,SAAS,EAACuE,QAAQ,CAAC,IAAI,CAAAD,QAAA,cACtBrD,IAAA,CAACR,QAAQ,GAAE,CAAC,CACH,CACZ,EACE,CAAC,cAENQ,IAAA,CAACP,MAAM,GAAE,CAAC,cACVO,IAAA,CAACN,WAAW,GAAE,CAAC,EACH,CAAC,CACG,CAAC,CAEzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}